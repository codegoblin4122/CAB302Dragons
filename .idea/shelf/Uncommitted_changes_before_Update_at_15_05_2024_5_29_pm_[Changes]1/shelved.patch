Index: src/main/java/com/example/cab302/controller/HelloController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cab302.controller;\r\n\r\nimport com.example.cab302.Main;\r\nimport com.example.cab302.RingTimer;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.PasswordField;\r\nimport javafx.scene.layout.BorderPane;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.Connection;\r\nimport java.sql.Statement;\r\nimport java.sql.ResultSet;\r\n/**\r\n * Controller for the main application login view.\r\n * Handles user interactions for login, signup, password reset, and exiting the application.\r\n */\r\npublic class HelloController {\r\n    @FXML\r\n    private Button signUpButton;\r\n\r\n    @FXML\r\n    private BorderPane LoginPane;\r\n\r\n    @FXML\r\n    private Button cancelButton;\r\n\r\n    @FXML\r\n    private Button loginButton;\r\n\r\n    @FXML\r\n    private Label loginMessageLabel;\r\n\r\n    @FXML\r\n    private PasswordField passwordPasswordField;\r\n\r\n    @FXML\r\n    private TextField usernameTextField;\r\n\r\n    @FXML\r\n    private Button resetPasswordButton;\r\n    /**\r\n     * Closes the application window when the cancel button is clicked.\r\n     */\r\n    @FXML\r\n    protected void cancelButtonOnAction() {\r\n        Stage stage = (Stage) cancelButton.getScene().getWindow();\r\n        stage.close();\r\n    }\r\n\r\n// Used with DatabaseConnection - switch to SqliteConnection\r\n//    public void loginButtonOnAction() {\r\n//        if (!usernameTextField.getText().isBlank() && !passwordPasswordField.getText().isBlank()) {\r\n//            //loginMessageLabel.setText(\"You tried to login!\");\r\n//            validateLogin();\r\n//        } else {\r\n//            loginMessageLabel.setText(\"Please enter your username and password\");\r\n//        }\r\n//    }\r\n//\r\n//    public void validateLogin() {\r\n//        DatabaseConnection connectNow = new DatabaseConnection();\r\n//        Connection connectDB = connectNow.getConnection();\r\n//\r\n//        String verifyLogin = \"SELECT count(1) FROM UserAccounts WHERE username = '\" + usernameTextField.getText() + \"' AND password = '\" + passwordPasswordField.getText() + \"';\";\r\n//\r\n//        try {\r\n//            Statement statement = connectDB.createStatement();\r\n//            ResultSet queryResult = statement.executeQuery(verifyLogin);\r\n//\r\n//            while(queryResult.next()) {\r\n//                if (queryResult.getInt(1) == 1) {\r\n//                    loginMessageLabel.setText(\"Welcome!\");\r\n//                } else {\r\n//                    loginMessageLabel.setText(\"Invalid Login. Please try again\");\r\n//                }\r\n//            }\r\n//        } catch (Exception e) {\r\n//            e.printStackTrace();\r\n//        }\r\n//    }\r\n    /**\r\n     * Navigates to the signup view when the signup button is clicked.\r\n     * @throws IOException if the Signup.fxml file cannot be loaded.\r\n     */\r\n    @FXML\r\n    protected void SwitchToSignUp() throws IOException {\r\n        Stage stage = (Stage) signUpButton.getScene().getWindow();\r\n        FXMLLoader fxmlLoader = new FXMLLoader(Main.class.getResource(\"view/Signup.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load(), Main.WIDTH, Main.HEIGHT);\r\n        stage.setScene(scene);\r\n    }\r\n    @FXML\r\n    /**\r\n     * Navigates to the reset password view when the reset password button is clicked.\r\n     * @throws IOException if the ResetPassword.fxml file cannot be loaded.\r\n     */\r\n    protected void switchToResetPassword() throws IOException {\r\n        Stage stage = (Stage) resetPasswordButton.getScene().getWindow();\r\n        FXMLLoader fxmlLoader = new FXMLLoader(Main.class.getResource(\"view/ResetPassword.fxml\"));\r\n        Scene scene = new Scene(fxmlLoader.load(), Main.WIDTH, Main.HEIGHT);\r\n        stage.setScene(scene);\r\n    }\r\n    /**\r\n     * Handles user login actions and navigates to the main application view upon successful login.\r\n     * Currently, this method does not perform any actual authentication.\r\n     */\r\n    @FXML\r\n    protected void loginButtonOnAction() {\r\n        System.out.print(\"Logging in\");\r\n        try {\r\n            // Get the current stage from the login button\r\n            Stage stage = (Stage) loginButton.getScene().getWindow();\r\n\r\n            // Load the timer scene\r\n            FXMLLoader fxmlLoader = new FXMLLoader(Main.class.getResource(\"view/TimerView.fxml\"));\r\n            if (fxmlLoader.getLocation() == null) {\r\n                System.out.println(\"Error loading the FXML file.\");\r\n                return;\r\n            }\r\n            Scene scene = new Scene(fxmlLoader.load(), Main.WIDTH, Main.HEIGHT);\r\n\r\n            // Set the new scene on the current stage\r\n            stage.setScene(scene);\r\n            stage.setTitle(\"Ring Timer\");\r\n            System.out.print(\"login successful\");\r\n        } catch (IOException e) {\r\n            System.out.print(\"login failed\");\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/cab302/controller/HelloController.java b/src/main/java/com/example/cab302/controller/HelloController.java
--- a/src/main/java/com/example/cab302/controller/HelloController.java	
+++ b/src/main/java/com/example/cab302/controller/HelloController.java	
@@ -114,6 +114,7 @@
     @FXML
     protected void loginButtonOnAction() {
         System.out.print("Logging in");
+
         try {
             // Get the current stage from the login button
             Stage stage = (Stage) loginButton.getScene().getWindow();
